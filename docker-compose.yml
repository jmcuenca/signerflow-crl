version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: crl_postgres
    environment:
      POSTGRES_USER: crl_user
      POSTGRES_PASSWORD: crl_password
      POSTGRES_DB: crl_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crl_user -d crl_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: crl_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Opcional: Servicio de la aplicación Go
  # Descomenta estas líneas si quieres ejecutar la app en Docker
  # crl-service:
  #   build: .
  #   container_name: crl_service
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - DATABASE_URL=postgres://crl_user:crl_password@postgres:5432/crl_db?sslmode=disable
  #     - REDIS_URL=redis:6379
  #     - PORT=8080
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   volumes:
  #     - ./crl_urls.json:/app/crl_urls.json
  #   restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: crl_network